/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.98
 * Generated at: 2025-02-09 14:39:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.ResultSet;

public final class admin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(7);
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html\"; charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width\", initial-scale=\"1\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/custom.css\">\n");
      out.write("<title>LogBlog 관리자</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("   ");

    // 세션 생성 시간 체크
    long creationTime = session.getCreationTime();
    long currentTime = System.currentTimeMillis();
    long sessionDuration = (currentTime - creationTime) / 1000; // 초 단위로 변환
    
    if (sessionDuration > 700) { // 1분(60초) 초과
        session.invalidate(); // 세션 무효화
        PrintWriter script = response.getWriter();
        script.println("<script>");
        script.println("alert('세션이 만료되었습니다!');");
        script.println("location.href = 'main.jsp';");
        script.println("</script>");
        return;
    }

    String userID = null;
    String userRole = null;
    String adminAuthenticated = null;
    
    // 쿠키에서 userID, userRole, adminAuthenticated 확인
    Cookie[] cookies = request.getCookies();
    if(cookies != null){
        for(Cookie cookie : cookies){
            if("userID".equals(cookie.getName())){
                userID = cookie.getValue();
            }
            if("userRole".equals(cookie.getName())){
                userRole = cookie.getValue();
            }
            if("adminAuthenticated".equals(cookie.getName())){
                adminAuthenticated = cookie.getValue();
            }
        }
    }
    
    // admin 체크
    if(userID == null || !"ADMIN".equals(userRole)) {
        PrintWriter script = response.getWriter();
        script.println("<script>");
        script.println("alert('관리자만 접근 가능합니다.')");
        script.println("location.href = 'main.jsp'");
        script.println("</script>");
        return;
    }

    // 2차 인증 체크
/*     if(!"true".equals(adminAuthenticated)) {
        response.sendRedirect("adminCheck.jsp");
        return;
    } */
    
      out.write("\n");
      out.write("   <!-- 나머지 HTML 코드는 동일 -->\n");
      out.write("   <nav class=\"navbar navbar-default\">\n");
      out.write("   	<div class=\"navbar-header\">\n");
      out.write("   		<button type=\"button\" class=\"navbar-toggle collapsed\"\n");
      out.write("   			data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\"\n");
      out.write("   			aria-expanded=\"false\">\n");
      out.write("   			<span class=\"icon-bar\"></span>\n");
      out.write("   			<span class=\"icon-bar\"></span>\n");
      out.write("   			<span class=\"icon-bar\"></span>\n");
      out.write("   		</button>\n");
      out.write("   		<a class=\"navbar-brand\" href=\"main.jsp\">LogBlog</a>\n");
      out.write("   	</div>\n");
      out.write("   	<div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n");
      out.write("   		<ul class=\"nav navbar-nav\">\n");
      out.write("   			<li><a href=\"main.jsp\">메인</a></li>\n");
      out.write("   			<li><a href=\"logblog.jsp\">게시판</a></li>\n");
      out.write("            <li class=\"active\"><a href=\"admin.jsp\">관리자</a></li>\n");
      out.write("   		</ul>\n");
      out.write("   		<ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("   			<li class=\"dropdown\">\n");
      out.write("   				<a href=\"#\" class=\"dropdown-toggle\"\n");
      out.write("   				data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n");
      out.write("   				aria-expanded=\"false\">회원관리<span class=\"caret\"></span>\n");
      out.write("   				</a>\n");
      out.write("   				<ul class=\"dropdown-menu\">\n");
      out.write("   					<li><a href=\"logoutAction.jsp\">로그아웃</a></li>\n");
      out.write("   				</ul>\n");
      out.write("   			</li>\n");
      out.write("   		</ul>\n");
      out.write("   	</div>\n");
      out.write("   </nav>\n");
      out.write("   \n");
      out.write("   <div class=\"container\">\n");
      out.write("       <h2>사용자 현황</h2>\n");
      out.write("       <div class=\"row\">\n");
      out.write("           <table class=\"table table-striped\">\n");
      out.write("               <thead>\n");
      out.write("                   <tr>\n");
      out.write("                       <th>아이디</th>\n");
      out.write("                       <th>이름</th>\n");
      out.write("                       <th>성별</th>\n");
      out.write("                       <th>이메일</th>\n");
      out.write("                       <th>권한</th>\n");
      out.write("                   </tr>\n");
      out.write("               </thead>\n");
      out.write("               <tbody>\n");
      out.write("                   ");

                       Connection conn = null;
                       Statement stmt = null;
                       ResultSet rs = null;
                       
                       try {
                           String dbURL = "jdbc:oracle:thin:@192.168.17.132:1521:DB19";
                           String dbID = "LogBlog";
                           String dbPassword = "1234";
                           Class.forName("oracle.jdbc.driver.OracleDriver");
                           conn = DriverManager.getConnection(dbURL, dbID, dbPassword);
                           
                           String SQL = "SELECT * FROM USER_TABLE ORDER BY USERID";
                           stmt = conn.createStatement();
                           rs = stmt.executeQuery(SQL);
                           
                           while(rs.next()) {
                   
      out.write("\n");
      out.write("                   <tr>\n");
      out.write("                       <td>");
      out.print( rs.getString("USERID") );
      out.write("</td>\n");
      out.write("                       <td>");
      out.print( rs.getString("USERNAME") );
      out.write("</td>\n");
      out.write("                       <td>");
      out.print( rs.getString("USERGENDER") );
      out.write("</td>\n");
      out.write("                       <td>");
      out.print( rs.getString("USEREMAIL") );
      out.write("</td>\n");
      out.write("                       <td>");
      out.print( rs.getString("USERROLE") );
      out.write("</td>\n");
      out.write("                   </tr>\n");
      out.write("                   ");

                           }
                       } catch(Exception e) {
                           e.printStackTrace();
                       } finally {
                           try {
                               if(rs != null) rs.close();
                               if(stmt != null) stmt.close();
                               if(conn != null) conn.close();
                           } catch(Exception e) {
                               e.printStackTrace();
                           }
                       }
                   
      out.write("\n");
      out.write("               </tbody>\n");
      out.write("           </table>\n");
      out.write("       </div>\n");
      out.write("   </div>\n");
      out.write("   <script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script>\n");
      out.write("   <script src=\"js/bootstrap.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
