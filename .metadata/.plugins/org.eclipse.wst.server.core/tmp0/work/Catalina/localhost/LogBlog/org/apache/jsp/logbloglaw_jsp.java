/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.98
 * Generated at: 2025-01-16 01:01:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class logbloglaw_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>LogBlog 게시판 규정</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\n");
      out.write("<style>\n");
      out.write("    body {\n");
      out.write("        padding: 20px;\n");
      out.write("        background-color: #f8f9fa;\n");
      out.write("    }\n");
      out.write("    .law-container {\n");
      out.write("        max-width: 800px;\n");
      out.write("        margin: 0 auto;\n");
      out.write("        background-color: white;\n");
      out.write("        padding: 30px;\n");
      out.write("        border-radius: 5px;\n");
      out.write("        box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n");
      out.write("    }\n");
      out.write("    .law-title {\n");
      out.write("        color: #1a73e8;\n");
      out.write("        margin-bottom: 20px;\n");
      out.write("        padding-bottom: 10px;\n");
      out.write("        border-bottom: 2px solid #1a73e8;\n");
      out.write("    }\n");
      out.write("    .law-section {\n");
      out.write("        margin-bottom: 20px;\n");
      out.write("    }\n");
      out.write("    .law-section h3 {\n");
      out.write("        color: #333;\n");
      out.write("        margin-bottom: 15px;\n");
      out.write("    }\n");
      out.write("    .law-list {\n");
      out.write("        padding-left: 20px;\n");
      out.write("    }\n");
      out.write("    .law-list li {\n");
      out.write("        margin-bottom: 10px;\n");
      out.write("        line-height: 1.6;\n");
      out.write("    }\n");
      out.write("    .warning-text {\n");
      out.write("        color: #dc3545;\n");
      out.write("        font-weight: bold;\n");
      out.write("    }\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div class=\"law-container\">\n");
      out.write("        <h2 class=\"law-title\">LogBlog 게시판 이용 규정</h2>\n");
      out.write("        \n");
      out.write("        <div class=\"law-section\">\n");
      out.write("            <h3>1. 게시글 작성 규정</h3>\n");
      out.write("            <ul class=\"law-list\">\n");
      out.write("                <li>모든 게시글은 상호 존중과 예의를 기반으로 작성되어야 합니다.</li>\n");
      out.write("                <li>타인을 비방하거나 명예를 훼손하는 내용은 금지됩니다.</li>\n");
      out.write("                <li><span class=\"warning-text\">심한 욕설이나 비속어 사용 시 관리자에 의해 즉시 삭제될 수 있습니다.</span></li>\n");
      out.write("                <li>불법적인 내용이나 성인물 관련 게시글은 엄격히 금지됩니다.</li>\n");
      out.write("            </ul>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"law-section\">\n");
      out.write("            <h3>2. 게시글 제재 사항</h3>\n");
      out.write("            <ul class=\"law-list\">\n");
      out.write("                <li>규정 위반 시 사전 경고 없이 게시글이 삭제될 수 있습니다.</li>\n");
      out.write("                <li>지속적인 규정 위반 시 계정 이용이 제한될 수 있습니다.</li>\n");
      out.write("                <li>삭제된 게시글에 대해서는 복구가 불가능합니다.</li>\n");
      out.write("                <li>관리자의 결정에 대해 이의가 있을 경우, 별도 문의 바랍니다.</li>\n");
      out.write("            </ul>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"law-section\">\n");
      out.write("            <h3>3. 권장 사항</h3>\n");
      out.write("            <ul class=\"law-list\">\n");
      out.write("                <li>게시글 작성 전 주제와 내용의 적절성을 확인해 주세요.</li>\n");
      out.write("                <li>다른 사용자들과 건설적인 의견 교환을 해주세요.</li>\n");
      out.write("                <li>올바른 게시판 문화 정착에 동참해 주세요.</li>\n");
      out.write("            </ul>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"law-section\">\n");
      out.write("            <p class=\"warning-text\">※ 본 규정은 사전 고지 없이 변경될 수 있으며, 변경된 규정은 즉시 적용됩니다.</p>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script>\n");
      out.write("    <script src=\"js/bootstrap.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
