/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.98
 * Generated at: 2025-01-23 04:20:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;
import blog.BlogDAO;
import blog.Blog;
import java.util.ArrayList;

public final class logblog_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("blog.BlogDAO");
    _jspx_imports_classes.add("blog.Blog");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html\"; charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width\", initial-scale=\"1\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\n");
      out.write("<title>LogBlog</title>\n");
      out.write("<style type=\"text/css\">\n");
      out.write("   a, a:hover {\n");
      out.write("   color: #000000;\n");
      out.write("   text-decoration: none;\n");
      out.write("   }\n");
      out.write("    .footer {\n");
      out.write("       position: fixed;\n");
      out.write("       left: 0;\n");
      out.write("       bottom: 0;\n");
      out.write("       width: 100%;\n");
      out.write("       background-color: #f8f9fa;\n");
      out.write("       text-align: center;\n");
      out.write("       padding: 15px;\n");
      out.write("       font-size: 14px;\n");
      out.write("       border-top: 1px solid #ddd;\n");
      out.write("   }\n");
      out.write("   /* 푸터와 컨텐츠가 겹치지 않도록 여백 추가 */\n");
      out.write("   body {\n");
      out.write("       margin-bottom: 60px;\n");
      out.write("   }\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("   ");

       String userID = null;
       if(session.getAttribute("userID") != null){
           userID = (String) session.getAttribute("userID");
       }
       
       String pageNumberParam = request.getParameter("pageNumber");
       int pageNumber = 1;
       
       if(pageNumberParam != null) {
    	    try {
    	        // 첫 번째 숫자만 추출 - 공백을 제거하고 처리
    	        String firstNumber = pageNumberParam.trim().split(" ")[0];  // 공백으로 split하여 첫 번째 토큰 사용
    	        pageNumber = Integer.parseInt(firstNumber);
    	    } catch (Exception e) {
    	        pageNumber = 1;
    	    }
       }

       String searchType = request.getParameter("searchType");
       String searchText = request.getParameter("searchText");
   
      out.write("\n");
      out.write("\n");
      out.write("   <nav class=\"navbar navbar-default\">\n");
      out.write("       <div class=\"navbar-header\">\n");
      out.write("           <button type=\"button\" class=\"navbar-toggle collapsed\"\n");
      out.write("               data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collpase-1\"\n");
      out.write("               aria-expanded=\"false\">\n");
      out.write("               <span class=\"icon-bar\"></span>\n");
      out.write("               <span class=\"icon-bar\"></span>\n");
      out.write("               <span class=\"icon-bar\"></span>\n");
      out.write("               </button>\n");
      out.write("               <a class=\"navbar-brand\" href=\"main.jsp\">LogBlog</a>\n");
      out.write("       </div>\n");
      out.write("       <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n");
      out.write("           <ul class=\"nav navbar-nav\">\n");
      out.write("               <li><a href=\"main.jsp\">메인</a></li>\n");
      out.write("               <li class=\"active\"><a href=\"logblog.jsp\">게시판</a></li>\n");
      out.write("           </ul>\n");
      out.write("           ");

               if(userID == null) {
           
      out.write("\n");
      out.write("           <ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("               <li class=\"dropdown\">\n");
      out.write("                   <a href=\"#\" class=\"dropdown-toggle\"\n");
      out.write("                   data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n");
      out.write("                   aria-expanded=\"false\">접속하기<span class=\"caret\"></span>\n");
      out.write("                   </a>\n");
      out.write("                   \n");
      out.write("                   <ul class=\"dropdown-menu\">\n");
      out.write("                       <li ><a href=\"login.jsp\">로그인</a></li>\n");
      out.write("                       <li><a href=\"join.jsp\">회원가입</a></li>\n");
      out.write("                   </ul>\n");
      out.write("               </li>\n");
      out.write("           </ul>\n");
      out.write("           ");

               } else {
           
      out.write("\n");
      out.write("           <ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("               <li class=\"dropdown\">\n");
      out.write("                   <a href=\"#\" class=\"dropdown-toggle\"\n");
      out.write("                   data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n");
      out.write("                   aria-expanded=\"false\">회원관리<span class=\"caret\"></span>\n");
      out.write("                   </a>\n");
      out.write("                   \n");
      out.write("                   <ul class=\"dropdown-menu\">\n");
      out.write("                       	<li><a href=\"logoutAction.jsp\">로그아웃</a></li>\n");
      out.write("   						<li><a href=\"myPageCheck.jsp\">마이 페이지</a></li>\n");
      out.write("                   </ul>\n");
      out.write("               </li>\n");
      out.write("           </ul>\n");
      out.write("           ");

               }
           
      out.write("\n");
      out.write("       </div>\n");
      out.write("   </nav>\n");
      out.write("   <div class=\"container\">\n");
      out.write("       <div class=\"row\">\n");
      out.write("           <!-- 검색 폼 -->\n");
      out.write("           <div class=\"col-lg-4\" style=\"margin-bottom: 20px;\">\n");
      out.write("               <form action=\"logblog.jsp\" method=\"get\" class=\"form-inline\">\n");
      out.write("                   <select name=\"searchType\" class=\"form-control\">\n");
      out.write("                       <option value=\"title\" ");
      out.print( searchType != null && searchType.equals("title") ? "selected" : "" );
      out.write(">제목</option>\n");
      out.write("                       <option value=\"userID\" ");
      out.print( searchType != null && searchType.equals("userID") ? "selected" : "" );
      out.write(">작성자</option>\n");
      out.write("                   </select>\n");
      out.write("                   <input type=\"text\" name=\"searchText\" class=\"form-control\" placeholder=\"검색어를 입력하세요\" \n");
      out.write("                          value=\"");
      out.print( searchText != null ? searchText : "" );
      out.write("\">\n");
      out.write("                   <button type=\"submit\" class=\"btn btn-primary\">검색</button>\n");
      out.write("               </form>\n");
      out.write("           </div>\n");
      out.write("\n");
      out.write("			");
 
    if(searchText != null && !searchText.equals("")) { 
        String filtered = searchText;
        // HTML 엔티티가 포함된 경우만 실행 가능하도록
        if(searchText.contains("&lt;") || searchText.contains("&#")) {
            // HTML 엔티티가 포함된 경우는 그대로 출력

      out.write("\n");
      out.write("            <script>\n");
      out.write("                var decodedText = document.createElement('textarea');\n");
      out.write("                decodedText.innerHTML = '");
      out.print( filtered );
      out.write("';\n");
      out.write("                document.write('검색어: ' + decodedText.value);\n");
      out.write("            </script>\n");

        } else {
            // 일반 텍스트나 <script> 태그는 HTML 엔티티로 변환만 하고 실행하지 않음
            filtered = searchText.replace("<", "&lt;")
                               .replace(">", "&gt;");

      out.write("\n");
      out.write("            <div>검색어: ");
      out.print( filtered );
      out.write("</div>\n");

        }
    }

      out.write("\n");
      out.write("\n");
      out.write("           <table class=\"table table-striped\" style=\"text-align: center; border: 1px solid #dddddd\">\n");
      out.write("               <thead>\n");
      out.write("                   <tr>\n");
      out.write("                       <th style=\"background-color: #eeeeee; text-align: center;\">번호</th>\n");
      out.write("                       <th style=\"background-color: #eeeeee; text-align: center;\">제목</th>\n");
      out.write("                       <th style=\"background-color: #eeeeee; text-align: center;\">작성자</th>\n");
      out.write("                       <th style=\"background-color: #eeeeee; text-align: center;\">작성일</th>\n");
      out.write("                   </tr>\n");
      out.write("               </thead>\n");
      out.write("               <tbody>\n");
      out.write("                   ");

					    BlogDAO blogDAO = new BlogDAO();
					    ArrayList<Blog> list;
					    
					    // 검색 파라미터 확인
					    
					    // 검색어가 있으면 검색 결과를, 없으면 전체 목록을 가져옴
					    if(searchType != null && searchText != null && !searchText.equals("")) {
					        list = blogDAO.getSearchList(searchType, searchText, pageNumber);
					    } else {
					        list = blogDAO.getList(pageNumber);
					    }
					    
					    for(int i = 0; i < list.size(); i++){
				   
      out.write("\n");
      out.write("                   <tr>\n");
      out.write("                       <td>");
      out.print( list.get(i).getBlogID() );
      out.write("</td>\n");
      out.write("                       <td><a href=\"view.jsp?blogID=");
      out.print( list.get(i).getBlogID() );
      out.write('"');
      out.write('>');
      out.print( list.get(i).getBlogTitle() );
      out.write("</a></td>\n");
      out.write("                       <td>");
      out.print( list.get(i).getUserID() );
      out.write("</td>\n");
      out.write("                       <td>");
      out.print( list.get(i).getBlogDate().substring(0, 11) + list.get(i).getBlogDate().substring(11, 13) + "시" + list.get(i).getBlogDate().substring(14, 16) + "분" );
      out.write("</td>\n");
      out.write("                   </tr>\n");
      out.write("                   ");
 
                       }
                   
      out.write("\n");
      out.write("               </tbody>\n");
      out.write("           </table>\n");
      out.write("           \n");
      out.write("           <!-- 페이지네이션 -->\n");
      out.write("           <div style=\"text-align: center;\">\n");
      out.write("               ");

                   if(pageNumber != 1) {
                       String prevUrl = "logblog.jsp?pageNumber=" + (pageNumber - 1);
                       if(searchType != null && searchText != null) {
                           prevUrl += "&searchType=" + searchType + "&searchText=" + searchText;
                       }
               
      out.write("\n");
      out.write("                   <a href=\"");
      out.print( prevUrl );
      out.write("\" class=\"btn btn-success btn-arraw-left\">이전</a>\n");
      out.write("               ");

                   }
                   if(blogDAO.nextPage(pageNumberParam)) {
                       String nextUrl = "logblog.jsp?pageNumber=" + (pageNumber + 1);
                       if(searchType != null && searchText != null) {
                           nextUrl += "&searchType=" + searchType + "&searchText=" + searchText;
                       }
               
      out.write("\n");
      out.write("                   <a href=\"");
      out.print( nextUrl );
      out.write("\" class=\"btn btn-success btn-arraw-left\">다음</a>\n");
      out.write("               ");

                   }
               
      out.write("\n");
      out.write("               <a href=\"write.jsp\" class=\"btn btn-primary pull-right\">글쓰기</a>\n");
      out.write("           </div>\n");
      out.write("       </div>\n");
      out.write("   </div>\n");
      out.write("   <script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script>\n");
      out.write("   <script src=\"js/bootstrap.js\"></script>\n");
      out.write("   \n");
      out.write("   <!-- Footer 추가 -->\n");
      out.write("   <footer class=\"footer\">\n");
      out.write("       <div class=\"container\">\n");
      out.write("           <span>관리자에게 문의: <a href=\"mailto:sungwuk98@gmail.com\">sungwuk98@gmail.com</a></span>\n");
      out.write("       </div>\n");
      out.write("   </footer>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
