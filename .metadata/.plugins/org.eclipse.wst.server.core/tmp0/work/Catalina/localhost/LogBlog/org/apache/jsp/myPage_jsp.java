/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.98
 * Generated at: 2025-02-09 13:09:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;
import user.UserDAO;
import user.User;
import java.util.*;

public final class myPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("user.User");
    _jspx_imports_classes.add("user.UserDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html\"; charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width\", initial-scale=\"1\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\n");
      out.write("<title>LogBlog</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    ");

        String userID = null;
        Cookie[] cookies = request.getCookies();
        if(cookies != null) {
            for(Cookie cookie : cookies) {
                if("userID".equals(cookie.getName())) {
                    userID = cookie.getValue();
                    break;
                }
            }
        }
        
        if(userID == null) {
            PrintWriter script = response.getWriter();
            script.println("<script>");
            script.println("alert('로그인이 필요합니다.')");
            script.println("location.href = 'login.jsp'");
            script.println("</script>");
            return;
        }
        
        // 쿠키의 userID로 사용자 정보 조회
        User user = new UserDAO().getUser(userID);
        if(user == null) {
            PrintWriter script = response.getWriter();
            script.println("<script>");
            script.println("alert('존재하지 않는 사용자입니다.')");
            script.println("location.href = 'main.jsp'");
            script.println("</script>");
            return;
        }
    
      out.write("\n");
      out.write("    \n");
      out.write("    <nav class=\"navbar navbar-default\">\n");
      out.write("        <div class=\"navbar-header\">\n");
      out.write("            <button type=\"button\" class=\"navbar-toggle collapsed\"\n");
      out.write("                data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collpase-1\"\n");
      out.write("                aria-expanded=\"false\">\n");
      out.write("                <span class=\"icon-bar\"></span>\n");
      out.write("                <span class=\"icon-bar\"></span>\n");
      out.write("                <span class=\"icon-bar\"></span>\n");
      out.write("            </button>\n");
      out.write("            <a class=\"navbar-brand\" href=\"main.jsp\">LogBlog</a>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n");
      out.write("            <ul class=\"nav navbar-nav\">\n");
      out.write("                <li class=\"active\"><a href=\"main.jsp\">메인</a></li>\n");
      out.write("                <li><a href=\"logblog.jsp\">게시판</a></li>\n");
      out.write("            </ul>\n");
      out.write("            <ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("                <li class=\"dropdown\">\n");
      out.write("                    <a href=\"#\" class=\"dropdown-toggle\"\n");
      out.write("                    data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n");
      out.write("                    aria-expanded=\"false\">회원관리<span class=\"caret\"></span>\n");
      out.write("                    </a>\n");
      out.write("                    <ul class=\"dropdown-menu\">\n");
      out.write("                        <li><a href=\"logoutAction.jsp\">로그아웃</a></li>\n");
      out.write("                        <li><a href=\"myPageCheck.jsp\">마이 페이지</a></li>\n");
      out.write("                    </ul>\n");
      out.write("                </li>\n");
      out.write("            </ul>\n");
      out.write("        </div>\n");
      out.write("    </nav>\n");
      out.write("    \n");
      out.write("    <div class=\"container\">\n");
      out.write("        <div class=\"col-lg-4\"></div>\n");
      out.write("        <div class=\"col-lg-4\">\n");
      out.write("            <div class=\"jumbotron\" style=\"padding-top: 20px;\">\n");
      out.write("                <form method=\"post\" action=\"myPageAction.jsp\">\n");
      out.write("                    <h3 style=\"text-align: center;\">내 정보</h3>\n");
      out.write("                    <div style=\"margin-top: 30px;\">\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>아이디</label>\n");
      out.write("                            <input type=\"text\" class=\"form-control\" value=\"");
      out.print( user.getUserID() );
      out.write("\" readonly>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>이름</label>\n");
      out.write("                            <input type=\"text\" class=\"form-control\" name=\"userName\" value=\"");
      out.print( user.getUserName() );
      out.write("\" readonly>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>성별</label>\n");
      out.write("                            <input type=\"text\" class=\"form-control\" name=\"userGender\" value=\"");
      out.print( user.getUserGender() );
      out.write("\" readonly>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"form-group\">\n");
      out.write("                            <label>이메일</label>\n");
      out.write("                            <input type=\"email\" class=\"form-control\" name=\"userEmail\" value=\"");
      out.print( user.getUserEmail() );
      out.write("\" readonly>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"row\" style=\"margin-top: 20px;\">\n");
      out.write("                            <div class=\"col-xs-4\">\n");
      out.write("                                <button type=\"button\" class=\"btn btn-primary\" onclick=\"toggleEdit()\">수정</button>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"col-xs-4\">\n");
      out.write("                                <button type=\"button\" class=\"btn btn-warning\" onclick=\"changePassword()\">비밀번호 변경</button>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"col-xs-4 text-right\">\n");
      out.write("                                <button type=\"submit\" class=\"btn btn-success\" id=\"saveBtn\" style=\"display: none;\">저장</button>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <div class=\"col-lg-4\"></div>\n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script>\n");
      out.write("    <script src=\"js/bootstrap.js\"></script>\n");
      out.write("    <script>\n");
      out.write("        function toggleEdit() {\n");
      out.write("            var inputs = document.getElementsByClassName('form-control');\n");
      out.write("            var saveBtn = document.getElementById('saveBtn');\n");
      out.write("            \n");
      out.write("            for(var i = 1; i < inputs.length; i++) {\n");
      out.write("                if(inputs[i].readOnly) {\n");
      out.write("                    inputs[i].readOnly = false;\n");
      out.write("                    inputs[i].style.backgroundColor = '#ffffff';\n");
      out.write("                    saveBtn.style.display = 'block';\n");
      out.write("                } else {\n");
      out.write("                    inputs[i].readOnly = true;\n");
      out.write("                    inputs[i].style.backgroundColor = '';\n");
      out.write("                    saveBtn.style.display = 'none';\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        function changePassword() {\n");
      out.write("            location.href = 'changePassword.jsp?userID=' + '");
      out.print( userID );
      out.write("';\n");
      out.write("        }\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
