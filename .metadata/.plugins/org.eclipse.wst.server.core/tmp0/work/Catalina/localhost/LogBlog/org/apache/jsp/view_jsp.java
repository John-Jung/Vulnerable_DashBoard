/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.98
 * Generated at: 2025-01-20 08:49:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;
import blog.Blog;
import blog.BlogDAO;

public final class view_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("blog.BlogDAO");
    _jspx_imports_classes.add("blog.Blog");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html\"; charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width\", initial-scale=\"1\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\n");
      out.write("<title>LogBlog</title>\n");
      out.write("<style>\n");
      out.write(".modal-container {\n");
      out.write("   display: none;\n");
      out.write("   position: fixed;\n");
      out.write("   top: 0;\n");
      out.write("   left: 0;\n");
      out.write("   width: 100%;\n");
      out.write("   height: 100%;\n");
      out.write("   background: rgba(0, 0, 0, 0.5);\n");
      out.write("   z-index: 1000;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".modal-content {\n");
      out.write("   position: relative;\n");
      out.write("   background: white;\n");
      out.write("   width: 90%;\n");
      out.write("   height: 90%;\n");
      out.write("   margin: 2% auto;\n");
      out.write("   padding: 20px;\n");
      out.write("   border-radius: 5px;\n");
      out.write("   box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n");
      out.write("}\n");
      out.write("\n");
      out.write(".close-btn {\n");
      out.write("   position: absolute;\n");
      out.write("   right: 10px;\n");
      out.write("   top: 10px;\n");
      out.write("   font-size: 24px;\n");
      out.write("   cursor: pointer;\n");
      out.write("   color: #666;\n");
      out.write("   z-index: 1001;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".close-btn:hover {\n");
      out.write("   color: #000;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".modal-iframe {\n");
      out.write("   width: 100%;\n");
      out.write("   height: calc(100% - 20px);\n");
      out.write("   border: none;\n");
      out.write("   margin-top: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".btn-spacing {\n");
      out.write("   margin-right: 5px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".error-message {\n");
      out.write("   padding: 20px;\n");
      out.write("   margin: 20px;\n");
      out.write("   border: 1px solid #ff0000;\n");
      out.write("   background-color: #ffebeb;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("   ");

   String userID = null;
   String userRole = request.getParameter("userRole");
   String password = request.getParameter("password");
   Blog blog = null;

   try {
       if(session.getAttribute("userID") != null) {
           userID = (String) session.getAttribute("userID");
       }
       
       String blogID = request.getParameter("blogID");
       if (blogID == null || blogID.trim().isEmpty()) {
           throw new Exception("유효하지 않는 글입니다.");
       }
       
       BlogDAO blogDAO = new BlogDAO();
       blog = blogDAO.getBlog(blogID);
       
       // blog가 null이면 바로 에러를 던집니다
       if(blog == null) {  
           throw new Exception("존재하지 않는 글입니다.");
       }
       
       // 비밀글 접근 권한 체크
       if(blog.getIsSecret() == 1) {
           if(userRole != null && userRole.equals("guest")) {
               if(password == null || !password.equals(blog.getPassword())) {
                   throw new Exception("비밀번호가 일치하지 않습니다.");
               }
           }
       }
   
      out.write("\n");
      out.write("   <nav class=\"navbar navbar-default\">\n");
      out.write("       <div class=\"navbar-header\">\n");
      out.write("           <button type=\"button\" class=\"navbar-toggle collapsed\"\n");
      out.write("               data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collpase-1\"\n");
      out.write("               aria-expanded=\"false\">\n");
      out.write("               <span class=\"icon-bar\"></span>\n");
      out.write("               <span class=\"icon-bar\"></span>\n");
      out.write("               <span class=\"icon-bar\"></span>\n");
      out.write("           </button>\n");
      out.write("           <a class=\"navbar-brand\" href=\"main.jsp\">LogBlog</a>\n");
      out.write("       </div>\n");
      out.write("       <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n");
      out.write("           <ul class=\"nav navbar-nav\">\n");
      out.write("               <li><a href=\"main.jsp\">메인</a></li>\n");
      out.write("               <li class=\"active\"><a href=\"logblog.jsp\">게시판</a></li>\n");
      out.write("           </ul>\n");
      out.write("           ");

           if(userID == null) {
           
      out.write("\n");
      out.write("           <ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("               <li class=\"dropdown\">\n");
      out.write("                   <a href=\"#\" class=\"dropdown-toggle\"\n");
      out.write("                       data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n");
      out.write("                       aria-expanded=\"false\">접속하기<span class=\"caret\"></span>\n");
      out.write("                   </a>\n");
      out.write("                   <ul class=\"dropdown-menu\">\n");
      out.write("                       <li><a href=\"login.jsp\">로그인</a></li>\n");
      out.write("                       <li><a href=\"join.jsp\">회원가입</a></li>\n");
      out.write("                   </ul>\n");
      out.write("               </li>\n");
      out.write("           </ul>\n");
      out.write("           ");

           } else {
           
      out.write("\n");
      out.write("           <ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("               <li class=\"dropdown\">\n");
      out.write("                   <a href=\"#\" class=\"dropdown-toggle\"\n");
      out.write("                       data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n");
      out.write("                       aria-expanded=\"false\">회원관리<span class=\"caret\"></span>\n");
      out.write("                   </a>\n");
      out.write("                   <ul class=\"dropdown-menu\">\n");
      out.write("                       <li><a href=\"logoutAction.jsp\">로그아웃</a></li>\n");
      out.write("                   </ul>\n");
      out.write("               </li>\n");
      out.write("           </ul>\n");
      out.write("           ");

           }
           
      out.write("\n");
      out.write("       </div>\n");
      out.write("   </nav>\n");
      out.write("   <div class=\"container\">\n");
      out.write("       <div class=\"row\">\n");
      out.write("           <table class=\"table table-striped\" style=\"text-align: center; border: 1px solid #dddddd\">\n");
      out.write("               <thead>\n");
      out.write("                   <tr>\n");
      out.write("                       <th colspan=\"3\" style=\"background-color: #eeeeee; text-align: center;\">게시판 글보기 양식</th>\n");
      out.write("                   </tr>\n");
      out.write("               </thead>\n");
      out.write("               <tbody>\n");
      out.write("                   <tr>\n");
      out.write("                       <td style=\"width: 20%;\">글 제목</td>\n");
      out.write("                       <td colspan=\"2\">");
      out.print( blog.getBlogTitle() );
      out.write("</td>\n");
      out.write("                   </tr>\n");
      out.write("                   <tr>\n");
      out.write("                       <td>작성자</td>\n");
      out.write("                       <td colspan=\"2\">");
      out.print( blog.getUserID() );
      out.write("</td>\n");
      out.write("                   </tr>\n");
      out.write("                   <tr>\n");
      out.write("                       <td>작성일자</td>\n");
      out.write("                       <td colspan=\"2\">");
      out.print( blog.getBlogDate().substring(0, 11) + blog.getBlogDate().substring(11, 13) + "시" + blog.getBlogDate().substring(14, 16) + "분" );
      out.write("</td>\n");
      out.write("                   </tr>\n");
      out.write("                   <tr>\n");
      out.write("                       <td>내용</td>\n");
      out.write("                       <td colspan=\"2\" style=\"min-height: 200px; text-align: left\">\n");
      out.write("                           <div id=\"content-container\">\n");
      out.write("                               ");
      out.print( blog.getBlogContent() );
      out.write("\n");
      out.write("                           </div>\n");
      out.write("                       </td>\n");
      out.write("                   </tr>\n");
      out.write("                   ");

                   if(blog.getFileName() != null && !blog.getFileName().isEmpty()) {
                   
      out.write("\n");
      out.write("                   <tr>\n");
      out.write("                       <td>파일</td>\n");
      out.write("                       <td colspan=\"2\">\n");
      out.write("                           <a href=\"uploads/");
      out.print( blog.getFileName() );
      out.write('"');
      out.write('>');
      out.print( blog.getFileName() );
      out.write("</a>\n");
      out.write("                           <br>\n");
      out.write("                           <a href=\"download.jsp?filename=");
      out.print( blog.getFileName() );
      out.write("\" class=\"btn btn-info btn-sm\">다운로드</a>\n");
      out.write("                           <button onclick=\"showFileModal('");
      out.print( blog.getFileName() );
      out.write("')\" class=\"btn btn-info btn-sm\">미리보기</button>\n");
      out.write("                       </td>\n");
      out.write("                   </tr>\n");
      out.write("                   ");

                   }
                   
      out.write("\n");
      out.write("               </tbody>\n");
      out.write("           </table>\n");
      out.write("           <a href=\"logblog.jsp\" class=\"btn btn-primary btn-spacing\">목록</a>\n");
      out.write("           ");

           if (userID != null && userID.equals(blog.getUserID())){
           
      out.write("\n");
      out.write("               <a href=\"update.jsp?blogID=");
      out.print( blog.getBlogID() );
      out.write("\" class=\"btn btn-primary btn-spacing\">수정</a>\n");
      out.write("               <a onclick=\"return confirm('정말로 삭제하시겠습니까?')\" href=\"deleteAction.jsp?blogID=");
      out.print( blog.getBlogID() );
      out.write("\" class=\"btn btn-primary btn-spacing\">삭제</a>\n");
      out.write("           ");
 } 
      out.write("\n");
      out.write("           <button class=\"btn btn-info btn-spacing\" onclick=\"showLawModal()\">게시판 규정</button>\n");
      out.write("           <a href=\"write.jsp\" class=\"btn btn-primary pull-right\">글쓰기</a>\n");
      out.write("       </div>\n");
      out.write("   </div>\n");
      out.write("   ");

   } catch (Exception e) {
       // 에러 메시지와 스택 트레이스를 화면에 출력
       out.println("<div class='container'><div class='error-message'>");
       out.println("<h3>오류가 발생했습니다:</h3>");
       out.println("<pre>");
       e.printStackTrace(new PrintWriter(out));
       out.println("</pre>");
       out.println("<a href='logblog.jsp' class='btn btn-primary'>목록으로 돌아가기</a>");
       out.println("</div></div>");
   }
   
      out.write("\n");
      out.write("\n");
      out.write("   <!-- 게시판 규정 모달 -->\n");
      out.write("   <div id=\"lawModal\" class=\"modal-container\">\n");
      out.write("       <div class=\"modal-content\">\n");
      out.write("           <span class=\"close-btn\" onclick=\"hideLawModal()\">&times;</span>\n");
      out.write("           <iframe src=\"logbloglaw.jsp\" class=\"modal-iframe\"></iframe>\n");
      out.write("       </div>\n");
      out.write("   </div>\n");
      out.write("\n");
      out.write("   <!-- 파일 미리보기 모달 -->\n");
      out.write("   <div id=\"fileModal\" class=\"modal-container\">\n");
      out.write("       <div class=\"modal-content\">\n");
      out.write("           <span class=\"close-btn\" onclick=\"hideFileModal()\">&times;</span>\n");
      out.write("           <iframe id=\"fileViewer\" class=\"modal-iframe\"></iframe>\n");
      out.write("       </div>\n");
      out.write("   </div>\n");
      out.write("\n");
      out.write("   <script src=\"https://code.jquery.com/jquery-3.1.1.min.js\"></script>\n");
      out.write("   <script src=\"js/bootstrap.js\"></script>\n");
      out.write("   <script>\n");
      out.write("   // 모달 관련 함수들\n");
      out.write("   function showLawModal() {\n");
      out.write("       document.getElementById('lawModal').style.display = 'block';\n");
      out.write("   }\n");
      out.write("\n");
      out.write("   function hideLawModal() {\n");
      out.write("       document.getElementById('lawModal').style.display = 'none';\n");
      out.write("   }\n");
      out.write("\n");
      out.write("   function showFileModal(filename) {\n");
      out.write("       document.getElementById('fileViewer').src = 'view_file.jsp?filename=' + encodeURIComponent(filename);\n");
      out.write("       document.getElementById('fileModal').style.display = 'block';\n");
      out.write("   }\n");
      out.write("\n");
      out.write("   function hideFileModal() {\n");
      out.write("       document.getElementById('fileModal').style.display = 'none';\n");
      out.write("       document.getElementById('fileViewer').src = '';\n");
      out.write("   }\n");
      out.write("\n");
      out.write("   // 모달 외부 클릭시 닫기\n");
      out.write("   window.onclick = function(event) {\n");
      out.write("       if (event.target.className === 'modal-container') {\n");
      out.write("           event.target.style.display = 'none';\n");
      out.write("           if (event.target.id === 'fileModal') {\n");
      out.write("               document.getElementById('fileViewer').src = '';\n");
      out.write("           }\n");
      out.write("       }\n");
      out.write("   }\n");
      out.write("\n");
      out.write("   // 컨텐츠 내 iframe 처리\n");
      out.write("   document.addEventListener('DOMContentLoaded', function() {\n");
      out.write("       const contentContainer = document.getElementById('content-container');\n");
      out.write("       if (contentContainer) {\n");
      out.write("           const iframes = contentContainer.getElementsByTagName('iframe');\n");
      out.write("           Array.from(iframes).forEach(iframe => {\n");
      out.write("               const iframeSrc = iframe.getAttribute('src');\n");
      out.write("               \n");
      out.write("               const modalContainer = document.createElement('div');\n");
      out.write("               modalContainer.className = 'modal-container';\n");
      out.write("               \n");
      out.write("               const modalContent = document.createElement('div');\n");
      out.write("               modalContent.className = 'modal-content';\n");
      out.write("               \n");
      out.write("               const closeBtn = document.createElement('span');\n");
      out.write("               closeBtn.innerHTML = '&times;';\n");
      out.write("               closeBtn.className = 'close-btn';\n");
      out.write("               closeBtn.onclick = function() {\n");
      out.write("                   modalContainer.style.display = 'none';\n");
      out.write("               };\n");
      out.write("               \n");
      out.write("               const modalIframe = document.createElement('iframe');\n");
      out.write("               modalIframe.src = iframeSrc;\n");
      out.write("               modalIframe.className = 'modal-iframe';\n");
      out.write("               \n");
      out.write("               modalContent.appendChild(closeBtn);\n");
      out.write("               modalContent.appendChild(modalIframe);\n");
      out.write("               modalContainer.appendChild(modalContent);\n");
      out.write("               document.body.appendChild(modalContainer);\n");
      out.write("               \n");
      out.write("               const button = document.createElement('button');\n");
      out.write("               button.textContent = '페이지 보기';\n");
      out.write("               button.className = 'btn btn-info';\n");
      out.write("               button.onclick = function() {\n");
      out.write("                   modalContainer.style.display = 'block';\n");
      out.write("               };\n");
      out.write("               \n");
      out.write("               iframe.parentNode.replaceChild(button, iframe);\n");
      out.write("           });\n");
      out.write("       }\n");
      out.write("   });\n");
      out.write("   </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
