<%@ page language="java" contentType="text/html; charset=UTF-8"
  pageEncoding="UTF-8"%>
<%@ page import="user.UserDAO" %>
<%@ page import="java.io.PrintWriter" %>
<% request.setCharacterEncoding("UTF-8"); %>
<jsp:useBean id="user" class="user.User" scope="page" /> 
<jsp:setProperty name="user" property="userID" />
<jsp:setProperty name="user" property="userPassword" /> 
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>LogBlog</title>
</head>
<body>
  <%
      String userID = null;
      if(session.getAttribute("userID") != null){
          userID = (String) session.getAttribute("userID");
      }
      if(userID != null) {
          PrintWriter script = response.getWriter();
          script.println("<script>");
          script.println("alert('이미 로그인이 되어있습니다.')");
          script.println("location.href = 'main.jsp'");
          script.println("</script>");
      }
      
      // application 스코프에서 사용자 카운터 관리
      Integer userCounter = (Integer)application.getAttribute("userCounter");
      if(userCounter == null) {
          userCounter = 1;
      } else {
          userCounter++;
      }
      application.setAttribute("userCounter", userCounter);
      
      // 카운터 기반으로 순차적 세션 ID 생성 
      String sequentialSessionId = String.format("%05d", userCounter);
      session.setAttribute("JSESSIONID", sequentialSessionId);
      
      UserDAO userDAO = new UserDAO();
      int result = userDAO.login(user.getUserID(), user.getUserPassword());
      
      if (result == 1){
          session.setAttribute("userID", user.getUserID());
          session.setAttribute("userRole", userDAO.getUserRole(user.getUserID()));
          
          // 모든 쿠키 설정 해제하고 새로 설정
          Cookie[] cookies = request.getCookies();
          if(cookies != null) {
              for(Cookie cookie : cookies) {
                  if("JSESSIONID".equals(cookie.getName())) {
                      cookie.setValue(sequentialSessionId);
                      cookie.setHttpOnly(false);
                      cookie.setSecure(false);
                      cookie.setPath("/");
                      response.addCookie(cookie);
                      break;
                  }
              }
          }
          
          // 새로운 쿠키 생성 및 설정
          Cookie sessionCookie = new Cookie("JSESSIONID", sequentialSessionId);
          sessionCookie.setHttpOnly(false);
          sessionCookie.setSecure(false);
          sessionCookie.setPath("/");
          response.addCookie(sessionCookie);
          
          Cookie idCookie = new Cookie("userID", user.getUserID());
          Cookie roleCookie = new Cookie("userRole", userDAO.getUserRole(user.getUserID()));
          Cookie adminCookie = new Cookie("adminAuth", "true");
          Cookie pwdCookie = new Cookie("userPassword", user.getUserPassword());
          
          // 쿠키 만료시간 설정 
          idCookie.setMaxAge(60*60*24);  // 24시간
          roleCookie.setMaxAge(60*60*24);
          adminCookie.setMaxAge(60*60*24);
          pwdCookie.setMaxAge(60*60*24);
          
          // 모든 쿠키 보안설정 해제
          idCookie.setHttpOnly(false);
          roleCookie.setHttpOnly(false); 
          adminCookie.setHttpOnly(false);
          pwdCookie.setHttpOnly(false);
          
          idCookie.setSecure(false);
          roleCookie.setSecure(false);
          adminCookie.setSecure(false); 
          pwdCookie.setSecure(false);
          
          // 쿠키 경로를 루트로 설정
          idCookie.setPath("/");
          roleCookie.setPath("/");
          adminCookie.setPath("/");
          pwdCookie.setPath("/");
          
          // 쿠키 추가
          response.addCookie(idCookie);
          response.addCookie(roleCookie);
          response.addCookie(adminCookie);
          response.addCookie(pwdCookie);
          
          PrintWriter script = response.getWriter();
          script.println("<script>");
          script.println("location.href = 'main.jsp'");
          script.println("</script>");
      }
      else if (result == 0){
          PrintWriter script = response.getWriter();
          script.println("<script>");
          script.println("alert('비밀번호가 틀립니다.')");
          script.println("history.back()");
          script.println("</script>");
      }
      else if (result == -1){
          PrintWriter script = response.getWriter();
          script.println("<script>");
          script.println("alert('존재하지 않는 아이디입니다.')");
          script.println("history.back()");
          script.println("</script>");
      }
      else if (result == -2){
          PrintWriter script = response.getWriter();
          script.println("<script>");
          script.println("alert('데이터베이스 오류가 발생했습니다.')");
          script.println("history.back()");
          script.println("</script>");
      }
  %>
</body>
</html>