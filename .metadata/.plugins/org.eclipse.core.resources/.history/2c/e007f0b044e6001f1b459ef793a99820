<%@ page language="java" contentType="text/html; charset=UTF-8"
   pageEncoding="UTF-8"%>
<%@ page import="user.UserDAO" %>
<%@ page import="java.io.PrintWriter" %>
<%@ page import="java.util.*" %>
<% request.setCharacterEncoding("UTF-8"); %>
<jsp:useBean id="user" class="user.User" scope="page" /> 
<jsp:setProperty name="user" property="userID" />
<jsp:setProperty name="user" property="userPassword" /> 
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>LogBlog</title>
</head>
<body>
   <%
       // 이미 로그인된 경우 체크
       String userID = null;
       if(session.getAttribute("userID") != null){
           userID = (String) session.getAttribute("userID");
       }
       if(userID != null) {
           PrintWriter script = response.getWriter();
           script.println("<script>");
           script.println("alert('이미 로그인이 되어있습니다.')");
           script.println("location.href = 'main.jsp'");
           script.println("</script>");
       }
       
       UserDAO userDAO = new UserDAO();
       int result = userDAO.login(user.getUserID(), user.getUserPassword());
       
       if (result == 1){
           // 순차적 세션 ID 생성
           Integer userCounter = (Integer)application.getAttribute("userCounter");
           if(userCounter == null) {
               userCounter = 1;
           } else {
               userCounter++;
           }
           application.setAttribute("userCounter", userCounter);
           
           String sequentialSessionId = String.format("USER%05d", userCounter);
           
           // 세션 ID와 userID 매핑을 application 스코프에 저장
           Map<String, String> sessionUserMap = (Map<String, String>)application.getAttribute("sessionUserMap");
           if(sessionUserMap == null) {
               sessionUserMap = new HashMap<>();
           }
           sessionUserMap.put(sequentialSessionId, user.getUserID());
           application.setAttribute("sessionUserMap", sessionUserMap);
           
           // 기존 JSESSIONID 쿠키 제거
           Cookie[] cookies = request.getCookies();
           if(cookies != null) {
               for(Cookie cookie : cookies) {
                   if("JSESSIONID".equals(cookie.getName())) {
                       cookie.setValue("");
                       cookie.setMaxAge(0);
                       cookie.setPath("/");
                       response.addCookie(cookie);
                   }
               }
           }
           
           // 새로운 순차적 세션 ID 쿠키 설정
           Cookie sessionCookie = new Cookie("JSESSIONID", sequentialSessionId);
           sessionCookie.setHttpOnly(false);
           sessionCookie.setPath("/");
           response.addCookie(sessionCookie);
           
           // 사용자 정보 쿠키 설정
           Cookie idCookie = new Cookie("userID", user.getUserID());
           Cookie roleCookie = new Cookie("userRole", userDAO.getUserRole(user.getUserID()));
           Cookie adminCookie = new Cookie("adminAuth", "true");
           Cookie pwdCookie = new Cookie("userPassword", user.getUserPassword());
           
           idCookie.setHttpOnly(false);
           roleCookie.setHttpOnly(false);
           adminCookie.setHttpOnly(false);
           pwdCookie.setHttpOnly(false);
           
           idCookie.setPath("/");
           roleCookie.setPath("/");
           adminCookie.setPath("/");
           pwdCookie.setPath("/");
           
           response.addCookie(idCookie);
           response.addCookie(roleCookie);
           response.addCookie(adminCookie);
           response.addCookie(pwdCookie);
           
           PrintWriter script = response.getWriter();
           script.println("<script>");
           script.println("location.href = 'main.jsp'");
           script.println("</script>");
       }
       else if (result == 0){
           PrintWriter script = response.getWriter();
           script.println("<script>");
           script.println("alert('비밀번호가 틀립니다.')");
           script.println("history.back()");
           script.println("</script>");
       }
       else if (result == -1){
           PrintWriter script = response.getWriter();
           script.println("<script>");
           script.println("alert('존재하지 않는 아이디입니다.')");
           script.println("history.back()");
           script.println("</script>");
       }
       else if (result == -2){
           PrintWriter script = response.getWriter();
           script.println("<script>");
           script.println("alert('데이터베이스 오류가 발생했습니다.')");
           script.println("history.back()");
           script.println("</script>");
       }
   %>
</body>
</html>